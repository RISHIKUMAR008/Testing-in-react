import { render, screen, fireEvent } from '@testing-library/react';
import userEvent from '@testing-library/user-event';
import InputComponent from './InputComponent';

describe('InputComponent', () => {
  it('should render the input element', () => {
    render(<InputComponent />);
    const inputElement = screen.getByRole('textbox');
    expect(inputElement).toBeInTheDocument();
  });

  it('should update the input value on user input', async () => {
    render(<InputComponent />);
    const inputElement = screen.getByRole('textbox');

    // Simulate typing 'hello'
    await userEvent.type(inputElement, 'hello');

    expect(inputElement.value).toBe('hello');
  });
});




import React, { useState } from 'react';

const InputComponent = () => {
  const [inputValue, setInputValue] = useState('');

  const handleChange = (event) => {
    setInputValue(event.target.value);
  };

  return (
    <input type="text" value={inputValue} onChange={handleChange} />
  );
};

export default InputComponent;
